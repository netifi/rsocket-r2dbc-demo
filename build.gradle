buildscript {
  ext {
	springBootVersion = '2.1.0.RELEASE'
  }
  repositories {
	jcenter()
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
  }

  dependencies {
	classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.8'
	classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.16'
  }
}

apply from: "gradle/doc.gradle"

subprojects {
  apply plugin: 'java'
  apply plugin: 'idea'
  apply plugin: 'io.spring.dependency-management'

  group 'io.rsocket.r2dbc.demo'
  version '1.0.0'

  sourceCompatibility = 1.8

  ext['protobuf.version'] = '3.6.1'
  ext['rsocket.version'] = '0.11.12'
  ext['rsocket-rpc.version'] = '0.2.10'
  ext['proteus.version'] = '1.5.2'

  dependencyManagement {
	dependencies {

	  dependency group: 'io.r2dbc', name: 'r2dbc-postgresql', version: '1.0.0.BUILD-SNAPSHOT'
	  dependency group: 'io.projectreactor', name: 'reactor-pool', version: '0.0.1'

      dependencySet(group: 'io.netifi.proteus', version: ext['proteus.version']) {
		entry 'proteus-auth'
        entry 'proteus-client'
        entry 'proteus-frames'
      }
	  dependencySet(group: 'com.google.protobuf', version: ext['protobuf.version']) {
		entry 'protoc'
		entry 'protobuf-java'
		entry 'protobuf-java-util'
	  }
	  dependencySet(group: 'io.rsocket', version: ext['rsocket.version']) {
		entry 'rsocket-core'
		entry 'rsocket-transport-netty'
		entry 'rsocket-transport-local'
	  }
	  dependencySet(group: 'io.rsocket.rpc', version: ext['rsocket-rpc.version']) {
		entry 'rsocket-rpc-core'
		entry 'rsocket-rpc-metrics-idl'
		entry 'rsocket-rpc-protobuf'
		entry 'rsocket-rpc-protobuf-idl'
	  }
	}
  }

  repositories {
	jcenter()
	maven {
	  url 'http://repo.spring.io/libs-snapshot'
	}
	maven {
	  url "https://dl.bintray.com/netifi/netifi-oss"
	}
	maven {
	  url = 'https://artifactory.netifiinc.com/artifactory/libs-release-local'
	  credentials {
	    username = project.hasProperty('netifiArtifactoryUsername') ? project.property('netifiArtifactoryUsername') : System.getenv('NETIFI_ARTIFACTORY_USERNAME')
	    password = project.hasProperty('netifiArtifactoryPassword') ? project.property('netifiArtifactoryPassword') : System.getenv('NETIFI_ARTIFACTORY_PASSWORD')
	  }
	}
  }
}

configurations.all {
  resolutionStrategy {
	dependencySubstitution {
	  substitute module('com.google.guava:guava') with module('com.google.guava:guava:22.0')
	}
  }
}